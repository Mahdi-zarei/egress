name: Release to Docker

# Controls when the action will run.
on:
  workflow_dispatch:
  push:
    # only publish on version tags
    tags:
      - 'v*.*.*'
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
            ~/bin/protoc
            ~/.cache
          key: ${{ runner.os }}-recorder-service-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-recorder-service

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-recorder-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-recorder-modules

      - name: Recorder docker meta
        id: recorder-meta
        uses: docker/metadata-action@v3
        with:
          images: livekit/livekit-recorder
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}

      - name: Service docker meta
        id: service-meta
        uses: docker/metadata-action@v3
        with:
          images: livekit/livekit-recorder-service
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Download node modules
        run: npm install
        working-directory: ./recorder

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Download Go modules
        run: go mod download
        working-directory: ./service

      - name: Download protoc
        run: curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.15.8/protoc-3.15.8-linux-x86_64.zip

      - name: Install protoc
        run: |
          sudo unzip protoc-3.15.8-linux-x86_64.zip -d /usr
          sudo chmod 755 /usr/bin/protoc

      - name: Install protobuf generators
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go
        working-directory: ./service

      - name: Generate code
        uses: magefile/mage-action@v1
        with:
          version: latest
          args: proto
          workdir: ./service

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push recorder
        uses: docker/build-push-action@v2
        with:
          context: ./recorder
          push: true
          platforms: linux/amd64
          tags: ${{ steps.recorder-meta.outputs.tags }}
          labels: ${{ steps.recorder-meta.outputs.labels }}

      - name: Build and push service
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.service-meta.outputs.tags }}
          labels: ${{ steps.service-meta.outputs.labels }}
